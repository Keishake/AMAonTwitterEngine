// Generated by CoffeeScript 1.6.3
(function() {
  var Tweet, TweetBox, showMessage,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $(function() {
    var hashTweetBox, socket;
    socket = io.connect("http://" + socketioUrl);
    hashTweetBox = new TweetBox('#hashTweet');
    return socket.on('tweet', function(data) {
      var json, tweet;
      json = JSON.parse(data.message);
      tweet = new Tweet(json.profile_image_url, json.screen_name, json.text, json.id_str);
      return hashTweetBox.add(tweet);
    });
  });

  TweetBox = (function() {
    function TweetBox(selector) {
      this.showMoreTweets = __bind(this.showMoreTweets, this);
      var _this = this;
      this.selector = selector;
      this.tweets = [];
      this.newTweets = 0;
      this.to = '';
      this.from = '';
      this.favicon = new Favico({
        animation: 'slide'
      });
      this.showMoreTweets();
      $("" + this.selector + " .new").on("click", function() {
        return _this.showNewTweets();
      });
    }

    TweetBox.prototype.add = function(tweet) {
      this.tweets.push(tweet);
      $("" + this.selector + " .stream").prepend(tweet.content('newTweet'));
      this.newTweets++;
      this.favicon.badge(this.newTweets);
      $("#hashTweetCount").text(this.newTweets);
      return this.updateNumber();
    };

    TweetBox.prototype.showNewTweets = function() {
      var t, _i, _len, _ref;
      _ref = this.tweets;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        t = _ref[_i];
        if (t.display) {
          continue;
        }
        t.display = true;
      }
      $(".tweet.newTweet").css('display', 'block').animate({
        opacity: 1
      }, 1000);
      this.newTweets = 0;
      this.favicon.badge(0);
      $("#hashTweetCount").text(0);
      return this.updateNumber();
    };

    TweetBox.prototype.showMoreTweets = function() {
      var _this = this;
      $("" + this.selector + " .stream .more").css('display', 'none');
      return $.ajax({
        type: "GET",
        url: "/api/fetch_hash_tweets?from_id=" + this.to,
        success: function(data) {
          var i, str, t, tweet, tweets, _i, _len;
          tweets = data.tweets;
          str = '';
          for (i = _i = 0, _len = tweets.length; _i < _len; i = ++_i) {
            t = tweets[i];
            tweet = new Tweet(t.profile_image_url, t.screen_name, t.text, t.id_str);
            str += tweet.content('moreTweet');
          }
          $("" + _this.selector + " .stream").append(str);
          $(".tweet.moreTweet").css('display', 'block').animate({
            opacity: 1
          }, 1000);
          return _this.setIds(data.from_id, data.to_id);
        },
        error: function(data, textStatus, errorThrown) {}
      });
    };

    TweetBox.prototype.updateNumber = function() {
      return $("" + this.selector + " .num").text(this.newTweets);
    };

    TweetBox.prototype.setIds = function(from, to) {
      this.from = from;
      return this.to = to;
    };

    return TweetBox;

  })();

  Tweet = (function() {
    function Tweet(icon, username, text, id) {
      this.icon = "<a href='https://twitter.com/" + username + "/status/" + id + "' target='_blank'><img src='" + icon + "' width='30' height='30' /></a>";
      this.text = "<a href='https://twitter.com/" + username + "/status/" + id + "' target='_blank'><span class='twText' style='font-size:22px;'>" + text + "</span></a>";
      this.display = false;
    }

    Tweet.prototype.content = function(type) {
      return "<li class='tweet " + type + "' style='opacity: 0; display: none;'>" + this.icon + " ã€€" + this.text + "</li>";
    };

    return Tweet;

  })();

  showMessage = function(selector, firstText, color, secondText) {
    var originalCountColor, originalTextColor;
    $("questionButton").attr('disabled', 'disabled');
    originalTextColor = $(selector).css('color');
    originalCountColor = $(".textCount").css('color');
    $(selector).css('background', color).css('color', '#fff').val(firstText).attr('disabled', 'disabled');
    $(".textCount").css('color', '#fff');
    return setTimeout(function() {
      $(selector).css('background', '#fff').css('color', originalTextColor).val(secondText).removeAttr('disabled');
      $("questionButton").removeAttr('disabled');
      return $(".textCount").css('color', originalCountColor);
    }, 2000);
  };

}).call(this);
